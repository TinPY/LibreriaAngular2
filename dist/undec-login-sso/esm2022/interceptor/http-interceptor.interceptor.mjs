import { catchError } from 'rxjs';
export const authInterceptorFunctional = (req, next) => {
    const authToken = localStorage.getItem('undec-token');
    if (!authToken) {
        const locationBase64 = window.btoa(unescape(encodeURIComponent(window.location.href)));
        const authUrl = "http://localhost:8899/auth/login?state=" + locationBase64;
        window.location.assign(authUrl);
    }
    // Clone the request and add the authorization header
    const authReq = req.clone({
        setHeaders: {
            Authorization: `Bearer ${authToken}`
        }
    });
    // Pass the cloned request with the updated header to the next handler
    return next(authReq);
};
export const responseInterceptorFunctional = (req, next) => {
    return next(req)
        .pipe(catchError(error => {
        if (error.status === 403 || error.status === 401) {
            localStorage.clear();
            const authUrl = "http://localhost:8899/auth/logout?logout_uri=" + window.location.origin + "/logout";
            window.location.assign(authUrl);
        }
        throw error;
    }));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1pbnRlcmNlcHRvci5pbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3VuZGVjLWxvZ2luLXNzby9zcmMvaW50ZXJjZXB0b3IvaHR0cC1pbnRlcmNlcHRvci5pbnRlcmNlcHRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBRWhDLE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFzQixDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUN4RSxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBRXRELElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDZCxNQUFNLGNBQWMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN0RixNQUFNLE9BQU8sR0FBRyx5Q0FBeUMsR0FBRyxjQUFjLENBQUE7UUFDMUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDakM7SUFFRCxxREFBcUQ7SUFDckQsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUN4QixVQUFVLEVBQUU7WUFDVixhQUFhLEVBQUUsVUFBVSxTQUFTLEVBQUU7U0FDckM7S0FDRixDQUFDLENBQUM7SUFFSCxzRUFBc0U7SUFDdEUsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdkIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQXNCLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO0lBQzVFLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztTQUNYLElBQUksQ0FDRCxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDakIsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTtZQUNoRCxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDckIsTUFBTSxPQUFPLEdBQUcsK0NBQStDLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFBO1lBQ3BHLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ2pDO1FBQ0QsTUFBTSxLQUFLLENBQUM7SUFDZCxDQUFDLENBQUMsQ0FDTCxDQUFBO0FBQ1AsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEludGVyY2VwdG9yRm4gfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7Y2F0Y2hFcnJvcn0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgY29uc3QgYXV0aEludGVyY2VwdG9yRnVuY3Rpb25hbDogSHR0cEludGVyY2VwdG9yRm4gPSAocmVxLCBuZXh0KSA9PiB7XHJcbiAgY29uc3QgYXV0aFRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VuZGVjLXRva2VuJyk7XHJcblxyXG4gIGlmICghYXV0aFRva2VuKSB7XHJcbiAgICBjb25zdCBsb2NhdGlvbkJhc2U2NCA9IHdpbmRvdy5idG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpKVxyXG4gICAgY29uc3QgYXV0aFVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDo4ODk5L2F1dGgvbG9naW4/c3RhdGU9XCIgKyBsb2NhdGlvbkJhc2U2NFxyXG4gICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbihhdXRoVXJsKTtcclxuICB9XHJcblxyXG4gIC8vIENsb25lIHRoZSByZXF1ZXN0IGFuZCBhZGQgdGhlIGF1dGhvcml6YXRpb24gaGVhZGVyXHJcbiAgY29uc3QgYXV0aFJlcSA9IHJlcS5jbG9uZSh7XHJcbiAgICBzZXRIZWFkZXJzOiB7XHJcbiAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthdXRoVG9rZW59YFxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAvLyBQYXNzIHRoZSBjbG9uZWQgcmVxdWVzdCB3aXRoIHRoZSB1cGRhdGVkIGhlYWRlciB0byB0aGUgbmV4dCBoYW5kbGVyXHJcbiAgcmV0dXJuIG5leHQoYXV0aFJlcSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgcmVzcG9uc2VJbnRlcmNlcHRvckZ1bmN0aW9uYWw6IEh0dHBJbnRlcmNlcHRvckZuID0gKHJlcSwgbmV4dCkgPT4ge1xyXG4gIHJldHVybiBuZXh0KHJlcSlcclxuICAgICAgLnBpcGUoXHJcbiAgICAgICAgICBjYXRjaEVycm9yKGVycm9yID0+IHtcclxuICAgICAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PT0gNDAzIHx8IGVycm9yLnN0YXR1cyA9PT0gNDAxKSB7XHJcbiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XHJcbiAgICAgICAgICAgICAgY29uc3QgYXV0aFVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDo4ODk5L2F1dGgvbG9nb3V0P2xvZ291dF91cmk9XCIgKyB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgXCIvbG9nb3V0XCJcclxuICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKGF1dGhVcmwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgKVxyXG59XHJcbiJdfQ==