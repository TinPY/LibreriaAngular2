import { catchError } from 'rxjs';
export const authInterceptorFunctional = (req, next) => {
    const authToken = localStorage.getItem('undec-token');
    if (!authToken) {
        const locationBase64 = window.btoa(unescape(encodeURIComponent(window.location.origin + window.location.pathname)));
        const authUrl = "https://vm01undec.riu.edu.ar:8443/cancerbero/auth/login?state=" + locationBase64;
        window.location.assign(authUrl);
    }
    // Clone the request and add the authorization header
    const authReq = req.clone({
        setHeaders: {
            Authorization: `Bearer ${authToken}`
        }
    });
    // Pass the cloned request with the updated header to the next handler
    return next(authReq);
};
export const responseInterceptorFunctional = (req, next) => {
    return next(req)
        .pipe(catchError(error => {
        if (error.status === 403 || error.status === 401) {
            localStorage.clear();
            const authUrl = "https://vm01undec.riu.edu.ar:8443/cancerbero/auth/logout?logout_uri=" + window.location.origin + window.location.pathname + "logout";
            window.location.assign(authUrl);
        }
        throw error;
    }));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1pbnRlcmNlcHRvci5pbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3VuZGVjLWxvZ2luLXNzby9zcmMvaW50ZXJjZXB0b3IvaHR0cC1pbnRlcmNlcHRvci5pbnRlcmNlcHRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBRWhDLE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFzQixDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUN4RSxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBRXRELElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDZCxNQUFNLGNBQWMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUNuSCxNQUFNLE9BQU8sR0FBRyxnRUFBZ0UsR0FBRyxjQUFjLENBQUE7UUFDakcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDakM7SUFFRCxxREFBcUQ7SUFDckQsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUN4QixVQUFVLEVBQUU7WUFDVixhQUFhLEVBQUUsVUFBVSxTQUFTLEVBQUU7U0FDckM7S0FDRixDQUFDLENBQUM7SUFFSCxzRUFBc0U7SUFDdEUsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdkIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQXNCLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO0lBQzVFLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztTQUNYLElBQUksQ0FDRCxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDakIsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTtZQUNoRCxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDckIsTUFBTSxPQUFPLEdBQUcsc0VBQXNFLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFBO1lBQ3JKLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ2pDO1FBQ0QsTUFBTSxLQUFLLENBQUM7SUFDZCxDQUFDLENBQUMsQ0FDTCxDQUFBO0FBQ1AsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEludGVyY2VwdG9yRm4gfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7Y2F0Y2hFcnJvcn0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgY29uc3QgYXV0aEludGVyY2VwdG9yRnVuY3Rpb25hbDogSHR0cEludGVyY2VwdG9yRm4gPSAocmVxLCBuZXh0KSA9PiB7XHJcbiAgY29uc3QgYXV0aFRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VuZGVjLXRva2VuJyk7XHJcblxyXG4gIGlmICghYXV0aFRva2VuKSB7XHJcbiAgICBjb25zdCBsb2NhdGlvbkJhc2U2NCA9IHdpbmRvdy5idG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKSkpXHJcbiAgICBjb25zdCBhdXRoVXJsID0gXCJodHRwczovL3ZtMDF1bmRlYy5yaXUuZWR1LmFyOjg0NDMvY2FuY2VyYmVyby9hdXRoL2xvZ2luP3N0YXRlPVwiICsgbG9jYXRpb25CYXNlNjRcclxuICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24oYXV0aFVybCk7XHJcbiAgfVxyXG5cclxuICAvLyBDbG9uZSB0aGUgcmVxdWVzdCBhbmQgYWRkIHRoZSBhdXRob3JpemF0aW9uIGhlYWRlclxyXG4gIGNvbnN0IGF1dGhSZXEgPSByZXEuY2xvbmUoe1xyXG4gICAgc2V0SGVhZGVyczoge1xyXG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YXV0aFRva2VufWBcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgLy8gUGFzcyB0aGUgY2xvbmVkIHJlcXVlc3Qgd2l0aCB0aGUgdXBkYXRlZCBoZWFkZXIgdG8gdGhlIG5leHQgaGFuZGxlclxyXG4gIHJldHVybiBuZXh0KGF1dGhSZXEpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlc3BvbnNlSW50ZXJjZXB0b3JGdW5jdGlvbmFsOiBIdHRwSW50ZXJjZXB0b3JGbiA9IChyZXEsIG5leHQpID0+IHtcclxuICByZXR1cm4gbmV4dChyZXEpXHJcbiAgICAgIC5waXBlKFxyXG4gICAgICAgICAgY2F0Y2hFcnJvcihlcnJvciA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDQwMyB8fCBlcnJvci5zdGF0dXMgPT09IDQwMSkge1xyXG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgIGNvbnN0IGF1dGhVcmwgPSBcImh0dHBzOi8vdm0wMXVuZGVjLnJpdS5lZHUuYXI6ODQ0My9jYW5jZXJiZXJvL2F1dGgvbG9nb3V0P2xvZ291dF91cmk9XCIgKyB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgXCJsb2dvdXRcIlxyXG4gICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24oYXV0aFVybCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICApXHJcbn1cclxuIl19